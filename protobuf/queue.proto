syntax = "proto3";

package queue;

option go_package = "/protobuf_gen";

service QueueService {
  /**
   * Streaming rpc.
   * Respond when below rpcs are called.
   * - SkipSong
   * - RemoveSong
   * - ShuffleQueue
   * - ChangeSongPosition
   */
  rpc CurrentQueue (CurrentQueueRequest) returns (stream CurrentQueueResponse) {}
  rpc RemoveSong (RemoveSongRequest) returns (RemoveSongResponse) {}
  rpc SkipSong (SkipSongRequest) returns (SkipSongResponse) {}
  rpc RepeatSong (RepeatSongRequest) returns (RepeatSongResponse) {}
  rpc ShuffleQueue (ShuffleQueueRequest) returns (ShuffleQueueResponse) {}
  rpc ChangeSongPosition (ChangeSongPositionRequest) returns (ChangeSongPositionResponse) {}
  rpc TimeStamp (TimeStampRequest) returns (stream TimeStampResponse) {} // response every 0.5 seconds.
}

message CurrentQueueRequest {
  string guild_id = 1;
  string user_id = 2;
}

message CurrentQueueResponse {
  Song current_song = 1; // current song playing
  repeated Song songs = 2; // songs in queue WITHOUT current song.
  uint32 length = 3; // length of queue.
  uint32 timestamp = 4; // timestamp of current song in seconds.
}

message Song {
  string title = 1;
  string url = 2; // youtube url that can be directed to youtube.
  string thumbnail_url = 3;
  uint32 duration = 4; // in seconds
  string applicant = 5;
  uint32 position = 6; // position in queue.
  bool is_repeat = 7; // indicates if this song is repeated and useless to songs in queue.
}

message RemoveSongRequest {
  string guild_id = 1;
  string user_id = 2;
  uint32 song_index = 3; // 1 to songs.length - 1 cuz 0 is current playing song.
}

message RemoveSongResponse {} // check results through CurrentQueueResponse streaming.

message SkipSongRequest {
  string guild_id = 1;
  string user_id = 2;
  uint32 song_index = 3; // 1 to songs.length - 1 cuz 0 is current playing song.
}

message SkipSongResponse {} // check results through CurrentQueueResponse streaming.

/**
 * Only repeat current playing song.
 * If there is no song playing, return false.
 */
message RepeatSongRequest {
  string guild_id = 1;
  string user_id = 2;
}

message RepeatSongResponse {
  bool result = 1; // indicates if to set repeat or not.
}

/**
 * Change song position in queue.
 * Basically no different with ChangeSongPosition.
 */
message ShuffleQueueRequest {
  string guild_id = 1;
  string user_id = 2;
}

message ShuffleQueueResponse {} // check results through CurrentQueueResponse streaming.

message ChangeSongPositionRequest {
  string guild_id = 1;
  string user_id = 2;
  repeated uint32 song_positions = 3; // Only adjust to rest of queue. Not affect to current playing song.
}

message ChangeSongPositionResponse {} // check results through CurrentQueueResponse streaming.

message TimeStampRequest {
  string guild_id = 1;
}

message TimeStampResponse {
  uint32 timestamp = 1; // current playing in seconds.
  uint32 duration = 2; // current playing song's duration in seconds.
}