syntax = "proto3";

package discord;


option go_package = "/protobuf_gen";

service Discord {
  rpc GetOAuthUrl (GetOAuthUrlRequest) returns (GetOAuthUrlResponse) {}
  rpc LoginWithDiscord (LoginWithDiscordRequest) returns (LoginWithDiscordResponse) {}
  rpc RefreshAccessToken (RefreshAccessTokenRequest) returns (LoginWithDiscordResponse) {}
  rpc GetMyInfo (GetMyInfoRequest) returns (GetMyInfoResponse) {}
  rpc ValidateGuildId (ValidateGuildIdRequest) returns (ValidateGuildIdResponse) {}
  rpc ValidateUserId (ValidateUserIdRequest) returns (ValidateUserIdResponse) {}
}

message GetOAuthUrlRequest {
  string redirect_uri = 1;
}


message GetOAuthUrlResponse {
  string url = 1;
}

message LoginWithDiscordRequest {
  string code = 1;
  string redirect_uri = 2;
}

message LoginWithDiscordResponse {
  oneof response {
    DiscordAccessTokenResponse access_token = 1;
    DiscordErrorResponse error = 2;
  }
}

message DiscordErrorResponse {
  string error = 1;
  string error_description = 2;
}

message DiscordAccessTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_in = 3;
  string token_type = 4;
  string scope = 5;
}

message RefreshAccessTokenRequest {
  string refresh_token = 1;
}

message GetMyInfoRequest {
  string access_token = 1;
}

message GetMyInfoResponse {
  oneof response {
    UserInfo my_info = 1;
    DiscordErrorResponse error = 2;
  }
}

message UserInfo {
  string user_id = 1;
  string user_name = 2;
  string avatar = 3;
  string discriminator = 4;
}

message ValidateGuildIdRequest {
  string guild_id = 1;
}

message ValidateGuildIdResponse {
  reserved 1;
  DiscordGuild guild_info = 2;
}

message DiscordGuild {
  string guild_id = 1;
  string guild_name = 2;
  string icon = 3;
}

message ValidateUserIdRequest {
  string user_id = 1;
  string guild_id = 2;
}

message ValidateUserIdResponse {
  bool is_valid = 1;
}